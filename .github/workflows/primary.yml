name: Test and push

on:
  push:
    branches: [ develop, master ]
    tags: [ v* ]
  pull_request:
    branches: [ develop, master ]

jobs:
  test:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        poetry-version: ["1.3.1"]

    steps:
      - uses: actions/checkout@v2
      - name: Run image
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Test with coverage
        run: |
          make test-cov
  release:
    needs: test
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-20.04
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install twine
          pip install poetry==1.1.4
          pip install wheel
          poetry config virtualenvs.create false
          poetry install --no-interaction
      - name: Build package
        run: make build
      - name: Publish package
        run: make release
